//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MediStock_Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Stock", Namespace="http://schemas.datacontract.org/2004/07/MediStock_Service")]
    [System.SerializableAttribute()]
    public partial class Stock : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> item_availableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string item_compField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> item_expField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> item_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string item_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> item_priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> med_per_packateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> storage_colField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> storage_rowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> item_available {
            get {
                return this.item_availableField;
            }
            set {
                if ((this.item_availableField.Equals(value) != true)) {
                    this.item_availableField = value;
                    this.RaisePropertyChanged("item_available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string item_comp {
            get {
                return this.item_compField;
            }
            set {
                if ((object.ReferenceEquals(this.item_compField, value) != true)) {
                    this.item_compField = value;
                    this.RaisePropertyChanged("item_comp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> item_exp {
            get {
                return this.item_expField;
            }
            set {
                if ((this.item_expField.Equals(value) != true)) {
                    this.item_expField = value;
                    this.RaisePropertyChanged("item_exp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> item_id {
            get {
                return this.item_idField;
            }
            set {
                if ((this.item_idField.Equals(value) != true)) {
                    this.item_idField = value;
                    this.RaisePropertyChanged("item_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string item_name {
            get {
                return this.item_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.item_nameField, value) != true)) {
                    this.item_nameField = value;
                    this.RaisePropertyChanged("item_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> item_price {
            get {
                return this.item_priceField;
            }
            set {
                if ((this.item_priceField.Equals(value) != true)) {
                    this.item_priceField = value;
                    this.RaisePropertyChanged("item_price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> med_per_packate {
            get {
                return this.med_per_packateField;
            }
            set {
                if ((this.med_per_packateField.Equals(value) != true)) {
                    this.med_per_packateField = value;
                    this.RaisePropertyChanged("med_per_packate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> storage_col {
            get {
                return this.storage_colField;
            }
            set {
                if ((this.storage_colField.Equals(value) != true)) {
                    this.storage_colField = value;
                    this.RaisePropertyChanged("storage_col");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> storage_row {
            get {
                return this.storage_rowField;
            }
            set {
                if ((this.storage_rowField.Equals(value) != true)) {
                    this.storage_rowField = value;
                    this.RaisePropertyChanged("storage_row");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice", Namespace="http://schemas.datacontract.org/2004/07/MediStock_Service")]
    [System.SerializableAttribute()]
    public partial class Invoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> bill_noField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customer_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string doc_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> total_amountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> bill_no {
            get {
                return this.bill_noField;
            }
            set {
                if ((this.bill_noField.Equals(value) != true)) {
                    this.bill_noField = value;
                    this.RaisePropertyChanged("bill_no");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contact {
            get {
                return this.contactField;
            }
            set {
                if ((object.ReferenceEquals(this.contactField, value) != true)) {
                    this.contactField = value;
                    this.RaisePropertyChanged("contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customer_name {
            get {
                return this.customer_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.customer_nameField, value) != true)) {
                    this.customer_nameField = value;
                    this.RaisePropertyChanged("customer_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string doc_name {
            get {
                return this.doc_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.doc_nameField, value) != true)) {
                    this.doc_nameField = value;
                    this.RaisePropertyChanged("doc_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> total_amount {
            get {
                return this.total_amountField;
            }
            set {
                if ((this.total_amountField.Equals(value) != true)) {
                    this.total_amountField = value;
                    this.RaisePropertyChanged("total_amount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice_Order", Namespace="http://schemas.datacontract.org/2004/07/MediStock_Service")]
    [System.SerializableAttribute()]
    public partial class Invoice_Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> bill_noField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string item_com_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> item_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string item_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> no_of_packetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> bill_no {
            get {
                return this.bill_noField;
            }
            set {
                if ((this.bill_noField.Equals(value) != true)) {
                    this.bill_noField = value;
                    this.RaisePropertyChanged("bill_no");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string item_com_name {
            get {
                return this.item_com_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.item_com_nameField, value) != true)) {
                    this.item_com_nameField = value;
                    this.RaisePropertyChanged("item_com_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> item_id {
            get {
                return this.item_idField;
            }
            set {
                if ((this.item_idField.Equals(value) != true)) {
                    this.item_idField = value;
                    this.RaisePropertyChanged("item_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string item_name {
            get {
                return this.item_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.item_nameField, value) != true)) {
                    this.item_nameField = value;
                    this.RaisePropertyChanged("item_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> no_of_packet {
            get {
                return this.no_of_packetField;
            }
            set {
                if ((this.no_of_packetField.Equals(value) != true)) {
                    this.no_of_packetField = value;
                    this.RaisePropertyChanged("no_of_packet");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.stock_service")]
    public interface stock_service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/GetStock", ReplyAction="http://tempuri.org/stock_service/GetStockResponse")]
        System.Data.DataSet GetStock();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/GetStock", ReplyAction="http://tempuri.org/stock_service/GetStockResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStockAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/GetStockItem", ReplyAction="http://tempuri.org/stock_service/GetStockItemResponse")]
        MediStock_Client.ServiceReference1.Stock[] GetStockItem(string name, string com_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/GetStockItem", ReplyAction="http://tempuri.org/stock_service/GetStockItemResponse")]
        System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Stock[]> GetStockItemAsync(string name, string com_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/AddStock", ReplyAction="http://tempuri.org/stock_service/AddStockResponse")]
        void AddStock(MediStock_Client.ServiceReference1.Stock obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/AddStock", ReplyAction="http://tempuri.org/stock_service/AddStockResponse")]
        System.Threading.Tasks.Task AddStockAsync(MediStock_Client.ServiceReference1.Stock obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/UpdateStock", ReplyAction="http://tempuri.org/stock_service/UpdateStockResponse")]
        void UpdateStock(MediStock_Client.ServiceReference1.Stock obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/UpdateStock", ReplyAction="http://tempuri.org/stock_service/UpdateStockResponse")]
        System.Threading.Tasks.Task UpdateStockAsync(MediStock_Client.ServiceReference1.Stock obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/GetInvoiceofdDate", ReplyAction="http://tempuri.org/stock_service/GetInvoiceofdDateResponse")]
        MediStock_Client.ServiceReference1.Invoice[] GetInvoiceofdDate(System.DateTime dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/GetInvoiceofdDate", ReplyAction="http://tempuri.org/stock_service/GetInvoiceofdDateResponse")]
        System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Invoice[]> GetInvoiceofdDateAsync(System.DateTime dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/GetOrder", ReplyAction="http://tempuri.org/stock_service/GetOrderResponse")]
        MediStock_Client.ServiceReference1.Invoice_Order[] GetOrder(int bill_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/GetOrder", ReplyAction="http://tempuri.org/stock_service/GetOrderResponse")]
        System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Invoice_Order[]> GetOrderAsync(int bill_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/SearchInvoice", ReplyAction="http://tempuri.org/stock_service/SearchInvoiceResponse")]
        MediStock_Client.ServiceReference1.Invoice SearchInvoice(string contact, System.Nullable<int> bill_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/SearchInvoice", ReplyAction="http://tempuri.org/stock_service/SearchInvoiceResponse")]
        System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Invoice> SearchInvoiceAsync(string contact, System.Nullable<int> bill_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/MakeInvoice", ReplyAction="http://tempuri.org/stock_service/MakeInvoiceResponse")]
        MediStock_Client.ServiceReference1.Invoice MakeInvoice(MediStock_Client.ServiceReference1.Invoice obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/MakeInvoice", ReplyAction="http://tempuri.org/stock_service/MakeInvoiceResponse")]
        System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Invoice> MakeInvoiceAsync(MediStock_Client.ServiceReference1.Invoice obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/AddOrders", ReplyAction="http://tempuri.org/stock_service/AddOrdersResponse")]
        void AddOrders(MediStock_Client.ServiceReference1.Invoice_Order obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/AddOrders", ReplyAction="http://tempuri.org/stock_service/AddOrdersResponse")]
        System.Threading.Tasks.Task AddOrdersAsync(MediStock_Client.ServiceReference1.Invoice_Order obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/GetUpcomingExpStock", ReplyAction="http://tempuri.org/stock_service/GetUpcomingExpStockResponse")]
        MediStock_Client.ServiceReference1.Stock[] GetUpcomingExpStock();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/GetUpcomingExpStock", ReplyAction="http://tempuri.org/stock_service/GetUpcomingExpStockResponse")]
        System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Stock[]> GetUpcomingExpStockAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/GetLessStock", ReplyAction="http://tempuri.org/stock_service/GetLessStockResponse")]
        MediStock_Client.ServiceReference1.Stock[] GetLessStock();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/GetLessStock", ReplyAction="http://tempuri.org/stock_service/GetLessStockResponse")]
        System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Stock[]> GetLessStockAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/DeleteStock", ReplyAction="http://tempuri.org/stock_service/DeleteStockResponse")]
        void DeleteStock(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/DeleteStock", ReplyAction="http://tempuri.org/stock_service/DeleteStockResponse")]
        System.Threading.Tasks.Task DeleteStockAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/GetExpiredStock", ReplyAction="http://tempuri.org/stock_service/GetExpiredStockResponse")]
        MediStock_Client.ServiceReference1.Stock[] GetExpiredStock();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stock_service/GetExpiredStock", ReplyAction="http://tempuri.org/stock_service/GetExpiredStockResponse")]
        System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Stock[]> GetExpiredStockAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface stock_serviceChannel : MediStock_Client.ServiceReference1.stock_service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class stock_serviceClient : System.ServiceModel.ClientBase<MediStock_Client.ServiceReference1.stock_service>, MediStock_Client.ServiceReference1.stock_service {
        
        public stock_serviceClient() {
        }
        
        public stock_serviceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public stock_serviceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public stock_serviceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public stock_serviceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetStock() {
            return base.Channel.GetStock();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStockAsync() {
            return base.Channel.GetStockAsync();
        }
        
        public MediStock_Client.ServiceReference1.Stock[] GetStockItem(string name, string com_name) {
            return base.Channel.GetStockItem(name, com_name);
        }
        
        public System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Stock[]> GetStockItemAsync(string name, string com_name) {
            return base.Channel.GetStockItemAsync(name, com_name);
        }
        
        public void AddStock(MediStock_Client.ServiceReference1.Stock obj) {
            base.Channel.AddStock(obj);
        }
        
        public System.Threading.Tasks.Task AddStockAsync(MediStock_Client.ServiceReference1.Stock obj) {
            return base.Channel.AddStockAsync(obj);
        }
        
        public void UpdateStock(MediStock_Client.ServiceReference1.Stock obj) {
            base.Channel.UpdateStock(obj);
        }
        
        public System.Threading.Tasks.Task UpdateStockAsync(MediStock_Client.ServiceReference1.Stock obj) {
            return base.Channel.UpdateStockAsync(obj);
        }
        
        public MediStock_Client.ServiceReference1.Invoice[] GetInvoiceofdDate(System.DateTime dt) {
            return base.Channel.GetInvoiceofdDate(dt);
        }
        
        public System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Invoice[]> GetInvoiceofdDateAsync(System.DateTime dt) {
            return base.Channel.GetInvoiceofdDateAsync(dt);
        }
        
        public MediStock_Client.ServiceReference1.Invoice_Order[] GetOrder(int bill_no) {
            return base.Channel.GetOrder(bill_no);
        }
        
        public System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Invoice_Order[]> GetOrderAsync(int bill_no) {
            return base.Channel.GetOrderAsync(bill_no);
        }
        
        public MediStock_Client.ServiceReference1.Invoice SearchInvoice(string contact, System.Nullable<int> bill_no) {
            return base.Channel.SearchInvoice(contact, bill_no);
        }
        
        public System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Invoice> SearchInvoiceAsync(string contact, System.Nullable<int> bill_no) {
            return base.Channel.SearchInvoiceAsync(contact, bill_no);
        }
        
        public MediStock_Client.ServiceReference1.Invoice MakeInvoice(MediStock_Client.ServiceReference1.Invoice obj) {
            return base.Channel.MakeInvoice(obj);
        }
        
        public System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Invoice> MakeInvoiceAsync(MediStock_Client.ServiceReference1.Invoice obj) {
            return base.Channel.MakeInvoiceAsync(obj);
        }
        
        public void AddOrders(MediStock_Client.ServiceReference1.Invoice_Order obj) {
            base.Channel.AddOrders(obj);
        }
        
        public System.Threading.Tasks.Task AddOrdersAsync(MediStock_Client.ServiceReference1.Invoice_Order obj) {
            return base.Channel.AddOrdersAsync(obj);
        }
        
        public MediStock_Client.ServiceReference1.Stock[] GetUpcomingExpStock() {
            return base.Channel.GetUpcomingExpStock();
        }
        
        public System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Stock[]> GetUpcomingExpStockAsync() {
            return base.Channel.GetUpcomingExpStockAsync();
        }
        
        public MediStock_Client.ServiceReference1.Stock[] GetLessStock() {
            return base.Channel.GetLessStock();
        }
        
        public System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Stock[]> GetLessStockAsync() {
            return base.Channel.GetLessStockAsync();
        }
        
        public void DeleteStock(int id) {
            base.Channel.DeleteStock(id);
        }
        
        public System.Threading.Tasks.Task DeleteStockAsync(int id) {
            return base.Channel.DeleteStockAsync(id);
        }
        
        public MediStock_Client.ServiceReference1.Stock[] GetExpiredStock() {
            return base.Channel.GetExpiredStock();
        }
        
        public System.Threading.Tasks.Task<MediStock_Client.ServiceReference1.Stock[]> GetExpiredStockAsync() {
            return base.Channel.GetExpiredStockAsync();
        }
    }
}
